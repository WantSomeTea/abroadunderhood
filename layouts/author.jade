extend page

block meta
  meta(name="og:title"        content="Архив недели " + author.username + " в " + site.title )
  meta(name="og:url"          content=site.site_url + author.username + "/")
  meta(name="og:image"        content=site.site_url + author.media.image.replace('./', ''))
  meta(property="description" content=author.tweets[0].text)
  meta(name="og:description"  content=author.tweets[0].text)

block headerTitle
  span.hidden-xs
    a(href="/") abroadunderhood

block content
  .author-wrapper(style="background-image: url(" + author.media.banner.replace('./', '/') + ");")
    span.container
      span.author
        span.author__userpic(style="background-image: url(" + author.media.image.replace('./', '/') + ");")
        span.author__info
          span.author__headline.small
            = helpers.authorRender.d(author.tweets[0].created_at)
            &nbsp;&ndash;&nbsp;
            = helpers.authorRender.d(author.tweets[author.tweets.length - 1].created_at)
          h1.author__username
            = "@" + author.username
            a.small(href="https://twitter.com/" + author.username)
              span.glyphicon.glyphicon-new-window
          if author.info.location
            span.small
              span.glyphicon.glyphicon-map-marker
              = " " + author.info.location
              
  .content
    article.container.tweets
      each weekday in helpers.authorRender.prepareTweets(author.tweets)
        - var weekdayName = helpers.authorRender.weekday(weekday.weekday);
        - var weekdayID = helpers.authorRender.unidecode(weekdayName);
        
        h2.text-right(id=weekdayID)
          a.pull-left(href="#" + weekdayID)
            = helpers.authorRender.capitalize(weekdayName)
          small.text-muted
            = helpers.authorRender.tweetsUnit(weekday.tweets.length)

        each tweet in weekday.tweets
          - var isRetweet = !!tweet.retweeted_status;
          - var isQuoted = !!tweet.quoted_status;
          
          .tweet(class=isQuoted ? 'tweet--is-quoted' : '')
            a.tweet__time(href=helpers.authorRender.tweetLink(tweet))= helpers.authorRender.tweetTime(tweet)
            
            if isRetweet
              - var retweetedUser = tweet.entities.user_mentions[0].screen_name;
              
              blockquote
                != helpers.authorRender.render(tweet.retweeted_status)
                if tweet.entities.media
                  - var getImageHttps = function (item) { return item.media_url_https; };
                  - var images = tweet.entities.media.map(getImageHttps);
                  for image in images
                    img.img-responsive(src=image)
                footer
                  a(href="https://twitter.com/" + retweetedUser)
                    = "@" + retweetedUser

            else if isQuoted
              - var quotedUser = helpers.authorRender.getQuotedUser(tweet);

              blockquote
                != helpers.authorRender.render(tweet.quoted_status)
                if tweet.entities.media
                  - var getImageHttps = function (item) { return item.media_url_https; };
                  - var images = tweet.entities.media.map(getImageHttps);
                  for image in images
                    img.img-responsive(src=image)
                footer
                  a(href="https://twitter.com/" + quotedUser)
                    = "@" + quotedUser

              p
                != helpers.authorRender.render(tweet)
                if tweet.entities.media
                  - var getImageHttps = function (item) { return item.media_url_https; };
                  - var images = tweet.entities.media.map(getImageHttps);
                  for image in images
                    img.img-responsive(src=image)
            else
              p
                != helpers.authorRender.render(tweet)

                if tweet.entities.media
                  - var getImageHttps = function (item) { return item.media_url_https; };
                  - var images = tweet.entities.media.map(getImageHttps);
                  for image in images
                    img.img-responsive(src=image)
        
      h2(id="links")
        a(href="#links")
          = " Ссылки"

      each group in helpers.authorRender.getLinks(author.tweets)
        h3= group.host
        ul.list--links
          each link in group.links
            li: a(href=link rel="nofollow")= link
  
    - var prev = helpers.authorRender.prevAuthor(author);
    - var next = helpers.authorRender.nextAuthor(author);

    if prev || next
      .container
        hr
        
        .row
          if prev
            .col-xs-6.text-left
              .h3.author-prev-next
                = "← "
                .author-image.author-image--small(style="background-image: url(" + prev.media.image.replace('./', '/') + ");")
                = " "
                a(href="/" + prev.username)= "@" + prev.username
          if next
            .col-xs-6.text-right(class= !prev ? 'col-xs-offset-6' : '')
              .h3.author-prev-next
                a(href="/" + next.username)= "@" + next.username
                = " "
                .author-image.author-image--small(style="background-image: url(" + next.media.image.replace('./', '/') + ");")
                = " →"
